{
  "_args": [
    [
      {
        "raw": "react-material-ui-form-validator@https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
        "scope": null,
        "escapedName": "react-material-ui-form-validator",
        "name": "react-material-ui-form-validator",
        "rawSpec": "https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
        "spec": "https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
        "type": "remote"
      },
      "C:\\repos\\its-backoffice-commons\\FrontEnd\\App\\lib-formcontrols"
    ]
  ],
  "_from": "https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
  "_id": "react-material-ui-form-validator@2.0.0-beta.3",
  "_inCache": true,
  "_location": "/react-material-ui-form-validator",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-material-ui-form-validator@https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
    "scope": null,
    "escapedName": "react-material-ui-form-validator",
    "name": "react-material-ui-form-validator",
    "rawSpec": "https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
    "spec": "https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
    "type": "remote"
  },
  "_requiredBy": [
    "/lib-formcontrols"
  ],
  "_resolved": "https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
  "_shasum": "7757b8aa9118e7a0ee749ba3c187bad188123be3",
  "_shrinkwrap": null,
  "_spec": "react-material-ui-form-validator@https://github.com/itsprdsw/react-material-ui-form-validator/tarball/v1_lib",
  "_where": "C:\\repos\\its-backoffice-commons\\FrontEnd\\App\\lib-formcontrols",
  "author": {
    "name": "NewOldMax"
  },
  "bugs": {
    "url": "https://github.com/NewOldMax/react-material-ui-form-validator/issues"
  },
  "dependencies": {},
  "description": "Simple validator for forms designed with material-ui components.",
  "devDependencies": {
    "babel-cli": "^6.3.17",
    "babel-core": "^6.5.1",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.2.2",
    "babel-polyfill": "^6.5.0",
    "babel-preset-es2015": "6.16.0",
    "babel-preset-react": "6.16.0",
    "babel-preset-stage-2": "6.16.0",
    "babelify": "7.3.0",
    "browser-sync": "2.17.5",
    "browserify": "13.1.0",
    "bufferutil": "1.2.1",
    "envify": "3.4.1",
    "eslint": "^3.11.1",
    "eslint-config-airbnb": "^13.0.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "2.2.3",
    "eslint-plugin-react": "^6.8.0",
    "nodemon": "1.11.0",
    "rework": "1.0.1",
    "rework-npm": "1.0.0",
    "rework-npm-cli": "0.1.1",
    "serve": "1.4.0",
    "uglify-js": "2.7.3",
    "utf-8-validate": "1.2.1",
    "watchify": "3.7.0"
  },
  "homepage": "https://github.com/NewOldMax/react-material-ui-form-validator#readme",
  "keywords": [
    "material-ui",
    "form",
    "validation"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "name": "react-material-ui-form-validator",
  "optionalDependencies": {},
  "peerDependencies": {
    "material-ui": "1.0.0-beta.26",
    "react": "^15.0.0 || ^16.0.0",
    "react-dom": "^15.0.0 || ^16.0.0",
    "prop-types": "^15.0.0"
  },
  "readme": "## Validation component for material-ui forms\n\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://opensource.org/licenses/MIT)\n[![npm version](https://badge.fury.io/js/react-material-ui-form-validator.svg)](https://badge.fury.io/js/react-material-ui-form-validator)\n[![Build Status](https://travis-ci.org/NewOldMax/react-material-ui-form-validator.svg?branch=master)](https://travis-ci.org/NewOldMax/react-material-ui-form-validator)\n\n### [Demo](https://newoldmax.github.io/react-material-ui-form-validator/)\n\n### Versions\n+ 0.x - supports material-ui <= 0.x\n+ 1.x - supports material-ui >= 1.x (experimental support, you can install it by ``npm i react-material-ui-form-validator@next``)\n\nSimple form validation component for material-ui library inspired by [formsy-react](https://github.com/christianalfoni/formsy-react)\n\nSupported types:\n+ Text ([TextValidator](https://github.com/NewOldMax/react-material-ui-form-validator/blob/master/src/TextValidator.jsx))\n+ Select ([SelectValidator](https://github.com/NewOldMax/react-material-ui-form-validator/blob/master/src/SelectValidator.jsx))\n+ AutoComplete ([AutoCompleteValidator](https://github.com/NewOldMax/react-material-ui-form-validator/blob/master/src/AutoCompleteValidator.jsx))\n+ Date ([DateValidator](https://github.com/NewOldMax/react-material-ui-form-validator/blob/master/src/DateValidator.jsx))\n+ Time ([TimeValidator](https://github.com/NewOldMax/react-material-ui-form-validator/blob/master/src/TimeValidator.jsx))\n\nDefault validation rules:\n+ matchRegexp\n+ isEmail\n+ isEmpty\n+ required\n+ trim\n+ isNumber\n+ isFloat\n+ isPositive\n+ minNumber\n+ maxNumber\n\nSome rules can accept extra parameter, example:\n````javascript\n<TextValidator\n   {...someProps}\n   validators={['minNumber:0', 'maxNumber:255', 'matchRegexp:^[0-9]$']}\n/>\n````\n\n\n### Example\n\n<img src=\"https://raw.githubusercontent.com/NewOldMax/react-material-ui-form-validator/master/examples/example.gif\" width=\"285\">\n\n### Usage\n\nYou can pass any props of field components, but note that ``errorText`` prop will be replaced when validation errors occurred.\nYour component must [provide a theme](http://www.material-ui.com/#/get-started/usage).\n\n````javascript\n\nimport React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nclass MyForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        const email = event.target.value;\n        this.setState({ email });\n    }\n\n    handleSubmit() {\n        // your submit logic\n    }\n\n    render() {\n        const { email } = this.state;\n        return (\n            <ValidatorForm\n                ref=\"form\"\n                onSubmit={this.handleSubmit}\n                onError={errors => console.log(errors)}\n            >\n                <TextValidator\n                    floatingLabelText=\"Email\"\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    value={email}\n                    validators={['required', 'isEmail']}\n                    errorMessages={['this field is required', 'email is not valid']}\n                />\n                <RaisedButton type=\"submit\" />\n            </ValidatorForm>\n        );\n    }\n}\n\n````\n\nYou can add your custom rules:\n````javascript\n\nimport React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nclass ResetPasswordForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillMount() {\n        // custom rule will have name 'isPasswordMatch'\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n            if (value !== this.state.user.password) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    handleChange(event) {\n        const { user } = this.state;\n        user[event.target.name] = event.target.value;\n        this.setState({ user });\n    }\n\n    handleSubmit() {\n        // your submit logic\n    }\n\n    render() {\n        const { user } = this.state;\n\n        return (\n            <ValidatorForm\n                onSubmit={this.handleSubmit}\n            >\n                <TextValidator\n                    floatingLabelText=\"Password\"\n                    onChange={this.handleChange}\n                    name=\"password\"\n                    type=\"password\"\n                    validators={['required']}\n                    errorMessages={['this field is required']}\n                    value={user.password}\n                />\n                <TextValidator\n                    floatingLabelText=\"Repeat password\"\n                    onChange={this.handleChange}\n                    name=\"repeatPassword\"\n                    type=\"password\"\n                    validators={['isPasswordMatch', 'required']}\n                    errorMessages={['password mismatch', 'this field is required']}\n                    value={user.repeatPassword}\n                />\n                <RaisedButton type=\"submit\" />\n            </ValidatorForm>\n        );\n    }\n\n````\n\nCurrently material-ui [doesn't support](https://github.com/callemall/material-ui/issues/3771) error messages for switches, but you can easily add your own:\n````javascript\nimport React from 'react';\nimport { red300 } from 'material-ui/styles/colors';\nimport Checkbox from 'material-ui/Checkbox';\nimport { ValidatorComponent } from 'react-material-ui-form-validator';\n\nclass CheckboxValidatorElement extends ValidatorComponent {\n\n    render() {\n        const { errorMessages, validators, requiredError, value, ...rest } = this.props;\n\n        return (\n            <div>\n                <Checkbox\n                    {...rest}\n                    ref={(r) => { this.input = r; }}\n                />\n                {this.errorText()}\n            </div>\n        );\n    }\n\n    errorText() {\n        const { isValid } = this.state;\n\n        if (isValid) {\n            return null;\n        }\n\n        const style = {\n            right: 0,\n            fontSize: '12px',\n            color: red300,\n            position: 'absolute',\n            marginTop: '-25px',\n        };\n\n        return (\n            <div style={style}>\n                {this.getErrorMessage()}\n            </div>\n        );\n    }\n}\n\nexport default CheckboxValidatorElement;\n````\n````javascript\n    componentWillMount() {\n        ValidatorForm.addValidationRule('isTruthy', value => value);\n    }\n...\n    <CheckboxValidatorElement\n        ...\n        validators=['isTruthy']\n        errorMessages=['this field is required']\n        checked={value}\n        value={value} <---- you must provide this prop, it will be used only for validation\n    />\n````\n\n##### [Advanced usage](https://github.com/NewOldMax/react-material-ui-form-validator/wiki)\n\n### API\n\n#### ValidatorForm\n\n| Prop            | Required | Type     | Default value | Description                                                                                                                  |\n|-----------------|----------|----------|---------------|------------------------------------------------------------------------------------------------------------------------------|\n| onSubmit        | true     | function |               | Callback for form that fires when all validations are passed                                                                 |\n| instantValidate | false    | bool     | true          | If true, form will be validated after each field change. If false, form will be validated only after clicking submit button. |\n| onError         | false    | function |               | Callback for form that fires when some of validations are not passed. It will return array of elements which not valid. |\n\n#### All validated fields (ValidatorComponent)\n\n| Prop            | Required | Type     | Default value | Description                                                                            |\n|-----------------|----------|----------|---------------|----------------------------------------------------------------------------------------|\n| validators      | false    | array    |               | Array of validators. See list of default validators above.                             |\n| errorMessages   | false    | array    |               | Array of error messages. Order of messages should be the same as `validators` prop.    |\n| name            | true     | string   |               | Name of input                                                                          |\n| validatorListener | false  | function |               | It triggers after each validation. It will return `true` or `false`                    |\n\n\n### Contributing\n\nThis component covers all my needs, but feel free to contribute.",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/NewOldMax/react-material-ui-form-validator.git"
  },
  "scripts": {
    "build": "babel ./src -d ./lib --presets=es2015,react,stage-2",
    "lint": "eslint src/**",
    "prepublish": "npm run build"
  },
  "version": "2.0.0-beta.3"
}
